trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'Snyk'
    testType: 'code'
    codeSeverityThreshold: 'high'
    failOnIssues: false
    projectName: 'Files/calculator-project'
    organization: $(ORG)
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- task: SonarCloudPrepare@3
  inputs:
    SonarCloud: 'sonar-connection'
    organization: 'demodevopsyl'
    scannerMode: 'cli'
    cliScannerVersion: '6.2.1.4610'
    configMode: 'manual'
    cliProjectKey: 'davidputra2812_calculator-project'
    cliProjectName: 'calculator-project'
    cliSources: '.'

- task: SonarCloudAnalyze@3

- task: SonarCloudPublish@3
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'docker'
    repository: 'application321'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: '$(Build.BuildNumber)'
  displayName: 'Docker build'

- task: CmdLine@2
  displayName: Install Trivy
  inputs:
    script: |
      TRIVY_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | sed 's/^v//')
      wget https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      tar xzf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      rm trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
      sudo mv trivy /usr/local/bin/
      trivy -v

- task: CmdLine@2
  displayName: 'Run Trivy scan on database image'
  inputs:
    script: |
      wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -O junit.tpl
      trivy image application321.azurecr.io/application321:$(Build.BuildNumber) --db-repository "ghcr.io/aquasecurity/trivy-db:2","public.ecr.aws/aquasecurity/trivy-db" --format template --template "@./junit.tpl" --output $(Build.ArtifactStagingDirectory)/trivy-docker-image-report.xml

- task: PublishTestResults@2
  displayName: 'Publish Trivy App Image Scan Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Build.ArtifactStagingDirectory)/trivy-docker-image-report.xml'
    failTaskOnFailedTests: false

- task: SSH@0
  inputs:
    sshEndpoint: 'deploy'
    runOptions: 'commands'
    commands: |
      docker pull application321.azurecr.io/application321:$(Build.BuildNumber)
      docker run -d --name app_container -p 3000:80 application321.azurecr.io/application321:$(Build.BuildNumber)

- task: HawkScanInstall@1
  inputs:
    version: latest
    installerType: 'auto'
- task: RunHawkScan@1
  inputs:
    configFile: "stackhawk.yml"
    version: "latest"
  env:
    HAWK_API_KEY: $(hawk_api_key)

- script: |
    PR_ID=$(System.PullRequest.PullRequestId)
    REPO_NAME=$(Build.Repository.Name)
    ORG_URL=$(System.CollectionUri)
    BASE_URL="${ORG_URL}/$(System.TeamProject)/_git/$REPO_NAME/pullrequest/$PR_ID"

    # Fetch PR details using the Azure DevOps REST API
    PR_DETAILS=$(curl -s -u :$(System.AccessToken) \
    "$(System.CollectionUri)$(System.TeamProject)/_apis/git/repositories/$(Build.Repository.Id)/pullRequests/$PR_ID?api-version=6.0")

    PR_TITLE=$(echo $PR_DETAILS | jq -r .title)
    PR_AUTHOR=$(echo $PR_DETAILS | jq -r .createdBy.displayName)

    curl -H "Content-Type: application/json" -d '{
      "summary": "üéâ Build Success üéâ",
      "sections": [
        {
          "activityTitle": "‚úÖ Build Successful for PR - Repository: '"$REPO_NAME"'",
          "activitySubtitle": "üõ†Ô∏è PR: '"$PR_ID"' - '"$(System.PullRequest.SourceBranch)"'",
          "facts": [
            {"name": "üÜî Build Number", "value": "$(Build.BuildNumber)"},
            {"name": "üîß Commit ID", "value": "$(Build.SourceVersion)"},
            {"name": "üë§ PR Author", "value": "'"$PR_AUTHOR"'"},
            {"name": "üìù PR Title", "value": "'"$PR_TITLE"'"},
            {"name": "üåø Branch Name", "value": "$(Build.SourceBranch)"},
            {"name": "üîó PR Link", "value": "'"$BASE_URL"'"}
          ],
          "markdown": true
        }
      ]
    }' https://stackmentalist.webhook.office.com/webhookb2/2ee3bd96-57b4-4778-a17a-6f63c5297675@634afd4b-c03a-4ec7-bcbb-88ea55db47ac/IncomingWebhook/b613a217722f492ca72c55fedf8831af/b1b7f6c5-ceb7-4e27-9bec-4e1d19020c53/V2nFgW5s5OUl49eXOeAsS9hbYF4pwwGpHYlCqreB5VtNM1
  displayName: 'Send Teams Notification'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
